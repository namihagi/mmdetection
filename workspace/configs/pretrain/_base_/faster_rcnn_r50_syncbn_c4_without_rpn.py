# model settings
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='FasterRCNNForContrastive',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=3,
        strides=(1, 2, 2),
        dilations=(1, 1, 1),
        out_indices=(2, ),
        frozen_stages=-1,
        norm_cfg=norm_cfg,
        norm_eval=False,
        style='pytorch'),
    rand_box=dict(
        type="RandBox",
        flip=False,
        nms_thr=0.7,
        num_of_init_boxes=2000,
        min_scale_rate=0.1,
        min_num_of_final_box=5,
        max_num_of_final_box=50),
    contrastive_head=dict(
        type='ContrastiveHead',
        each_view_loss_weight=0.5,
        projection=dict(
            type='ProjectionMLP',
            in_channels=2048,
            norm_cfg=norm_cfg,
            norm_eval=False),
        prediction=dict(
            type='PredictionMLP',
            in_channels=2048,
            norm_cfg=norm_cfg,
            norm_eval=False)),
    roi_head=dict(
        type='StandardRoIHeadForContrasitve',
        shared_head=dict(
            type='ResLayer',
            depth=50,
            stage=3,
            stride=2,
            dilation=1,
            style='pytorch',
            norm_cfg=norm_cfg,
            norm_eval=False),
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=1024,
            featmap_strides=[16]),
        bbox_head=dict(
            type='BBoxHeadForContrastive',
            with_avg_pool=True,
            roi_feat_size=7,
            in_channels=2048)),
    # model training and testing settings
    train_cfg=dict(
        contrastive=dict(
            train_rpn=True),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
